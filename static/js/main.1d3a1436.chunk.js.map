{"version":3,"sources":["components/FilmCard/FilmCard.module.css","components/HomePage/HomePage.module.css","components/Loader/Loader.module.css","components/Search/Search.module.css","redux/reducer.js","redux/action-type.js","redux/store.js","services/url.js","redux/action.js","services/request.js","components/Search/Search.js","components/Loader/Loader.js","components/HomePage/HomePage.js","components/FilmCard/FilmCard.js","App.js","index.js"],"names":["module","exports","InitState","films","isLoading","isError","value","FilmReducer","state","payload","type","filter","film","title","includes","store","createStore","composeWithDevTools","applyMiddleware","thunk","url","fetchIsLoading","bool","fetchFilms","dispatch","axios","get","axiosData","then","data","results","catch","Search","handleChange","e","props","addValue","target","this","id","placeholder","className","s","search","onChange","Component","connect","Loader","loaderContainer","loader","Home","sortFilm","setState","sort","a","b","container","upDateValue","length","sortBtn","onClick","filmsList","map","idx","key","filmItem","to","FilmCard","characters","fetchExtraParam","arr","request","el","Promise","all","error","match","params","filtredFilm","find","filmTitle","mainDetail","filmDetail","episode_id","release_date","director","producer","character","name","extraDetails","App","path","exact","component","HomePage","push","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.1d3a1436.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmTitle\":\"FilmCard_filmTitle__1EdDE\",\"filmDetail\":\"FilmCard_filmDetail__2jzNe\",\"mainDetail\":\"FilmCard_mainDetail__2oImD\",\"extraDetails\":\"FilmCard_extraDetails__3r80p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomePage_container__2s-27\",\"title\":\"HomePage_title__1qOUd\",\"filmsList\":\"HomePage_filmsList__10JcY\",\"sortBtn\":\"HomePage_sortBtn__2oFpJ\",\"filmItem\":\"HomePage_filmItem__uXDXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__1qZRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3nGdH\"};","import {\r\n  FETCH_IS_LOADING,\r\n  FETCH_IS_SUCCSESS,\r\n  FETCH_IS_ERROR,\r\n  ADD_VALUE\r\n} from './action-type';\r\n\r\nconst InitState = {\r\n  films: [],\r\n  isLoading: true,\r\n  isError: false,\r\n  value: ''\r\n};\r\n\r\nconst FilmReducer = (state = InitState, { payload, type }) => {\r\n  switch (type) {\r\n    case FETCH_IS_SUCCSESS:\r\n      return { ...state, films: payload };\r\n    case FETCH_IS_LOADING:\r\n      return { ...state, isLoading: payload };\r\n    case FETCH_IS_ERROR:\r\n      return { ...state, isError: payload };\r\n    case ADD_VALUE:\r\n      return {\r\n        ...state,\r\n        value: payload,\r\n        films: state.films.filter((film) => film.title.includes(payload))\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default FilmReducer;\r\n","export const FETCH_IS_LOADING = 'FETCH_IS_LOADING';\r\nexport const FETCH_IS_SUCCSESS = 'FETCH_IS_SUCCSES';\r\nexport const FETCH_IS_ERROR = 'FETCH_IS_ERROR';\r\nexport const ADD_VALUE = 'ADD_VALUE';\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport FilmReducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(\r\n  FilmReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","const url = 'https://swapi.co/api/films/';\r\n\r\nexport default url;\r\n","import { axiosData } from '../services/request';\r\n\r\nimport {\r\n  FETCH_IS_LOADING,\r\n  FETCH_IS_SUCCSESS,\r\n  FETCH_IS_ERROR,\r\n  ADD_VALUE\r\n} from './action-type';\r\n\r\nexport const fetchIsError = (bool) => ({ type: FETCH_IS_ERROR, payload: bool });\r\n\r\nexport const fetchIsLoading = (bool) => ({\r\n  type: FETCH_IS_LOADING,\r\n  payload: bool\r\n});\r\nexport const fetchIsSuccsess = (items) => ({\r\n  type: FETCH_IS_SUCCSESS,\r\n  payload: items\r\n});\r\nexport const addValue = (value) => ({ type: ADD_VALUE, payload: value });\r\n\r\nexport const fetchFilms = (url) => (dispatch) => {\r\n  dispatch(fetchIsLoading(true));\r\n  axiosData(url)\r\n    .then((data) => {\r\n      dispatch(fetchIsLoading(false));\r\n      dispatch(fetchIsSuccsess(data.data.results));\r\n    })\r\n    .catch(() => dispatch(fetchIsError(true)));\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const axiosData = (url) => {\r\n  const res = axios.get(url);\r\n  return res;\r\n};\r\n","import React, { Component } from 'react';\r\nimport s from './Search.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { addValue } from '../../redux/action';\r\nimport { fetchFilms } from '../../redux/action';\r\nimport url from '../../services/url';\r\n\r\nclass Search extends Component {\r\n  state = {};\r\n\r\n  handleChange = (e) => {\r\n    this.props.addValue(e.target.value);\r\n    if (e.target.value === '') {\r\n      this.props.fetchFilms(url);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n    return (\r\n      <input\r\n        id=\"search\"\r\n        placeholder=\"search film name..\"\r\n        className={s.search}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\nconst MDTP = (dispatch) => ({\r\n  addValue: (value) => dispatch(addValue(value)),\r\n  fetchFilms: (url) => dispatch(fetchFilms(url))\r\n});\r\nexport default connect(null, MDTP)(Search);\r\n","import React from \"react\";\r\nimport s from \"./Loader.module.css\";\r\n\r\nconst Loader = () => (\r\n  <div className={s.loaderContainer}>\r\n    <p className={s.loader}>LOADING ...</p>\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport url from '../../services/url';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchFilms } from '../../redux/action';\r\nimport Search from '../Search/Search';\r\nimport Loader from '../Loader/Loader';\r\nimport s from './HomePage.module.css';\r\n\r\nclass Home extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.fetchFilms(url);\r\n  }\r\n\r\n  sortFilm = () => {\r\n    const { films } = this.props;\r\n    this.setState({\r\n      films: films.sort((a, b) => (a.title > b.title ? 1 : -1))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { films, isLoading } = this.props;\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        <h1 className={s.title}> Star Wars</h1>\r\n        <Search upDateValue={this.upDateValue} />\r\n        {isLoading && <Loader />}\r\n        {films.length > 0 && (\r\n          <>\r\n            <button className={s.sortBtn} onClick={this.sortFilm}>\r\n              Sort\r\n            </button>\r\n            <ul className={s.filmsList}>\r\n              {films.map((film, idx) => (\r\n                <li key={idx} className={s.filmItem}>\r\n                  <Link to={`films/${idx}`}>\r\n                    <p>{film.title}</p>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst MSTP = (state) => ({\r\n  films: state.films,\r\n  isLoading: state.isLoading,\r\n  value: state.value\r\n});\r\n\r\nconst MDTP = (dispatch) => ({\r\n  fetchFilms: (url) => dispatch(fetchFilms(url))\r\n});\r\nexport default connect(MSTP, MDTP)(Home);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport url from '../../services/url';\r\nimport Loader from '../Loader/Loader';\r\nimport s from './FilmCard.module.css';\r\n\r\nclass FilmCard extends Component {\r\n  state = { film: [], characters: [] };\r\n\r\n  componentDidMount() {\r\n    const id = +this.props.match.params.id;\r\n    const filtredFilm = this.props.films.find((film, idx) => {\r\n      if (idx === id) {\r\n        return film;\r\n      }\r\n    });\r\n    this.setState(\r\n      {\r\n        film: filtredFilm\r\n      },\r\n      () => {\r\n        this.fetchExtraParam(this.state.film.characters);\r\n      }\r\n    );\r\n  }\r\n\r\n  fetchExtraParam = (arr) => {\r\n    const request = arr.map((el) => axios.get(el));\r\n    Promise.all(request)\r\n      .then((data) => this.setState({ characters: data }))\r\n      .catch((error) => error);\r\n  };\r\n\r\n  render() {\r\n    const { film, characters } = this.state;\r\n    const { isLoading } = this.props;\r\n    return (\r\n      <>\r\n        {isLoading && <Loader />}\r\n        {film && (\r\n          <div>\r\n            <h2 className={s.filmTitle}>{film.title} </h2>\r\n            <div className={s.mainDetail}>\r\n              <div>\r\n                Episode:<span className={s.filmDetail}> {film.episode_id}</span>\r\n              </div>\r\n              <div>\r\n                Date of release:\r\n                <span className={s.filmDetail}>{film.release_date} </span>{' '}\r\n              </div>\r\n              <div>\r\n                Director: <span className={s.filmDetail}> {film.director}</span>\r\n              </div>\r\n              <div>\r\n                Producer:<span className={s.filmDetail}>{film.producer} </span>{' '}\r\n              </div>\r\n              <div>\r\n                Characters:\r\n                {characters.map((character) => (\r\n                  <span key={character.data.name} className={s.extraDetails}>\r\n                    {character.data.name},\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst MSTP = (state) => ({\r\n  isLoading: state.isLoading,\r\n  films: state.films\r\n});\r\nexport default connect(MSTP)(FilmCard);\r\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage';\nimport FilmCard from './components/FilmCard/FilmCard';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/films/:id\" component={FilmCard} />\n          <Redirect push to=\"/\" />\n        </Switch>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport './styles.css';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}